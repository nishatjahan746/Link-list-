class Node:
    def __init__(self, val):
        self.val = val
        self.next = None

def make_list(values, pos):
    head = Node(values[0])
    curr = head
    cycle_node = None

    if pos == 0:
        cycle_node = head

    for i in range(1, len(values)):
        curr.next = Node(values[i])
        curr = curr.next
        if i == pos:
            cycle_node = curr

    if pos != -1:
        curr.next = cycle_node

    return head

def has_cycle(head):
    slow = head
    fast = head
    while fast and fast.next:
        slow = slow.next
        fast = fast.next.next
        if slow == fast:
            print("YES")
            return
    print("NO")

has_cycle(make_list([3, 2, 0, 4], 1))  
has_cycle(make_list([3, 2, 0, 4], -1))  
